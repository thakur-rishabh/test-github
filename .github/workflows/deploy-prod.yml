name: Deploy to Production

on:
  pull_request:
    types: [closed]
    branches:
      - main
env:
  PRINCIPAL_ENGINEER_USERNAME: 'resu312'

jobs:
  call-build-workflow:
    name: Build Projects
    if: github.event.pull_request.merged == true
    uses: ./.github/workflows/build.yml
    secrets:
      first: test

  deploy:
    name: Deploy to Production Environment
    needs: call-build-workflow
    runs-on: ubuntu-latest
    environment:
      name: production
      url: https://your-app-prod-url.com

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Echo Deployment Information
        run: |
          echo "üöÄ Starting deployment to Production..."
          echo "Triggered by PR #${{ github.event.number }} merge to ${{ github.base_ref }}"
          echo "Merged by: ${{ github.event.pull_request.merged_by.login }}"
          echo "Commit to deploy: ${{ github.sha }}" # This will be the merge commit SHA

      - name: test vars
        shell: bash
        run: |
          echo "sha_test=$(git rev-parse --short ${GITHUB_SHA})" >> $GITHUB_ENV

      - name: Print Short SHA Environment Variable
        run: |
          echo "The short SHA set in the previous step is: ${{ env.sha_test }}"

      - name: Wait 30 seconds before health check
        run: |
          echo "‚è±Ô∏è Waiting 30 seconds before running health check‚Ä¶"
          sleep 30
      
      - name: Run tests (example step that will intentionally fail)
        id: test
        run: |
          echo "Running tests....."
          echo "This step will intentionally fail to test notifications."
          exit 1 # This causes the step to fail
          echo "Tests successful!" # This line will not be reached
        
      - name: Health Check
        id: health_check
        run: |
          echo "Checking production endpoint‚Ä¶"
          STATUS_CODE=$(curl -s -o /dev/null -w "%{http_code}" https://httpstat.us/500)
          echo "::set-output name=status_code::$STATUS_CODE"

      - name: Notify on health check failure
        if: steps.health_check.outputs.status_code != '200'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.MY_SECRETE }}
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 
                  `üö® **Health check failed** on production endpoint after deploy of \`${{ github.sha }}\` (PR #${{ github.event.number }}).\n\n` +
                  `‚Ä¢ **Status code:** ${{ steps.health_check.outputs.status_code }}\n` +
                  `‚Ä¢ **Endpoint tested:** https://your-app-prod-url.com\n\n` +
                  `Please investigate the service health or rollback the release. (cc @${{ env.PRINCIPAL_ENGINEER_USERNAME }})`
            })
      
      - name: Notify for failure
        if: failure()
        uses: actions/github-script@v7
        with:
          github-token: ${{secrets.MY_SECRETE}}
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 
              `‚ùå **Automated tests failed** on commit \`${{ github.sha }}\` in PR #${{ github.event.number }}.\n\n` +
              `‚Ä¢ **Logs & Checks:** [View workflow run](${context.payload.workflow_run.html_url})\n` +
              `‚Ä¢ **Error:** Exit code ${{ steps.test.outcome }}\n\n` +
              `Please review the test output, fix any failures, and push a new commit. (cc @${{ env.PRINCIPAL_ENGINEER_USERNAME }})`
            })
